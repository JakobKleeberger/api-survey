# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class SetEnd(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, end_date=None):  # noqa: E501
        """SetEnd - a model defined in OpenAPI

        :param id: The id of this SetEnd.  # noqa: E501
        :type id: int
        :param end_date: The end_date of this SetEnd.  # noqa: E501
        :type end_date: str
        """
        self.openapi_types = {
            'id': int,
            'end_date': str
        }

        self.attribute_map = {
            'id': 'id',
            'end_date': 'end-date'
        }

        self._id = id
        self._end_date = end_date

    @classmethod
    def from_dict(cls, dikt) -> 'SetEnd':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SetEnd of this SetEnd.  # noqa: E501
        :rtype: SetEnd
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this SetEnd.


        :return: The id of this SetEnd.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SetEnd.


        :param id: The id of this SetEnd.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def end_date(self):
        """Gets the end_date of this SetEnd.


        :return: The end_date of this SetEnd.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this SetEnd.


        :param end_date: The end_date of this SetEnd.
        :type end_date: str
        """
        if end_date is None:
            raise ValueError("Invalid value for `end_date`, must not be `None`")  # noqa: E501

        self._end_date = end_date
